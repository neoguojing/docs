# syscall

## 总结
- 执行syscall之前，主动放弃p和m的绑定
- syscall结束时：1.尝试获取原来的p执行；2.从获取一个p从空闲列表中3.将g放到全局runq，m回到空闲列表
- 
- 同步系统调用：文件系统调用等；p放弃核m的绑定，新建或找一个空闲m执行p
- 异步系统调用：非阻塞io（netpoll时）m没有被阻塞，因此仍然和p绑定；只是g被park了；避免了m的上下文切换；无需创建新的m
